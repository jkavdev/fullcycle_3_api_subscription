buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // precisa desse script para que nao ocorra erro ao realizar a migration do flyway
        classpath 'org.flywaydb:flyway-mysql:9.12.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    // adicionando plugin que fornece facilidades para rodar a aplicacao
    id 'application'
    // plugins do spring e spring boot
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '9.12.0'
}

group 'br.com.jkavdev.fullcycle.subscription.infrastructure'

bootJar {
    archiveFileName = 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

ext {
    springdoc = "1.8.0"
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation 'com.fasterxml.jackson.module:jackson-module-blackbird'

    implementation "org.springdoc:springdoc-openapi-webmvc-core:$springdoc"
    implementation "org.springdoc:springdoc-openapi-ui:$springdoc"

    // utilizando o servidor undertow, por se mostrar mais performatico que o tomcat
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    implementation 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.kafka:spring-kafka'

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation 'com.h2database:h2'
    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.flywaydb:flyway-mysql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.testcontainers:testcontainers:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
    }
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

testCodeCoverageReport {
    reports {
        xml.required = true
        xml.outputLocation = file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")

        html.required = true
        html.outputLocation = file("$rootDir/build/reports/jacoco/test/")
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}